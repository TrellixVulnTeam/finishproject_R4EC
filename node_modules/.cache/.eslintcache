[{"C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\index.js":"1","C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\App.js":"2","C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\redux\\store.js":"3","C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\redux\\userRedux.js":"4","C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\redux\\modalRedux.js":"5","C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\redux\\cartRedux.js":"6","C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\redux\\initialState.js":"7","C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\redux\\productsRedux.js":"8","C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\components\\views\\Homepage\\Homepage.js":"9","C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\components\\layout\\MainLayout\\MainLayout.js":"10","C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\components\\views\\NoPermission\\NoPermission.js":"11","C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\components\\views\\Shop\\Shop.js":"12","C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\components\\views\\Cart\\Cart.js":"13","C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\components\\views\\Product\\Product.js":"14","C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\config.js":"15","C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\components\\layout\\Header\\Header.js":"16","C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\components\\layout\\Footer\\Footer.js":"17","C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\components\\features\\CartModal\\CartModal.js":"18","C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\components\\features\\ShopBox\\ShopBox.js":"19","C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\components\\features\\RecommendationBox\\RecommendationBox.js":"20","C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\components\\features\\CartBox\\CartBox.js":"21","C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\components\\common\\NavButton\\NavButton.js":"22","C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\components\\common\\QuantityButton\\QuantityButton.js":"23"},{"size":445,"mtime":1630768593264,"results":"24","hashOfConfig":"25"},{"size":1108,"mtime":1626714964000,"results":"26","hashOfConfig":"25"},{"size":990,"mtime":1626714964000,"results":"27","hashOfConfig":"25"},{"size":1476,"mtime":1626714964000,"results":"28","hashOfConfig":"25"},{"size":705,"mtime":1626714964000,"results":"29","hashOfConfig":"25"},{"size":3263,"mtime":1626714964000,"results":"30","hashOfConfig":"25"},{"size":338,"mtime":1626714964000,"results":"31","hashOfConfig":"25"},{"size":2598,"mtime":1626714964000,"results":"32","hashOfConfig":"25"},{"size":2463,"mtime":1630769824728,"results":"33","hashOfConfig":"25"},{"size":766,"mtime":1626714964000,"results":"34","hashOfConfig":"25"},{"size":264,"mtime":1626714964000,"results":"35","hashOfConfig":"25"},{"size":1679,"mtime":1630769001226,"results":"36","hashOfConfig":"25"},{"size":3609,"mtime":1626714964000,"results":"37","hashOfConfig":"25"},{"size":5783,"mtime":1626714964000,"results":"38","hashOfConfig":"25"},{"size":267,"mtime":1626714964000,"results":"39","hashOfConfig":"25"},{"size":1653,"mtime":1630769870372,"results":"40","hashOfConfig":"25"},{"size":248,"mtime":1630769893491,"results":"41","hashOfConfig":"25"},{"size":2087,"mtime":1626714964000,"results":"42","hashOfConfig":"25"},{"size":1931,"mtime":1626714964000,"results":"43","hashOfConfig":"25"},{"size":1278,"mtime":1626714964000,"results":"44","hashOfConfig":"25"},{"size":2072,"mtime":1626714964000,"results":"45","hashOfConfig":"25"},{"size":459,"mtime":1626714964000,"results":"46","hashOfConfig":"25"},{"size":1753,"mtime":1626714964000,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"onyvm0",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\index.js",[],"C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\App.js",[],"C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\redux\\store.js",[],"C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\redux\\userRedux.js",[],"C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\redux\\modalRedux.js",[],"C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\redux\\cartRedux.js",["102","103","104"],"import { API_URL } from '../config';\nimport Axios from 'axios';\n\n/* selectors */\nexport const getCartData = ({ cart }) => cart;\n\n/* action name creator */\nconst reducerName = 'cart';\nconst createActionName = name => `app/${reducerName}/${name}`;\n\n/* action types */\nconst FETCH_START = createActionName('FETCH_START');\nconst FETCH_ERROR = createActionName('FETCH_ERROR');\nconst ADD_TO_CART = createActionName('ADD_TO_CART');\nconst CHANGE_QUANTITY = createActionName('CHANGE_QUANTITY');\nconst REMOVE_FROM_CART = createActionName('REMOVE_FROM_CART');\nconst CHANGE_DESCRIPTION = createActionName('CHANGE_DESCRIPTION');\nconst FETCH_SUCCESS = createActionName('FETCH_SUCCESS');\n\n/* action creators */\nexport const fetchStarted = payload => ({ payload, type: FETCH_START });\nexport const fetchError = payload => ({ payload, type: FETCH_ERROR });\nexport const addToCart = payload => ({ payload, type: ADD_TO_CART });\nexport const changeQuantity = payload => ({ payload, type: CHANGE_QUANTITY });\nexport const removeFromCart = payload => ({ payload, type: REMOVE_FROM_CART });\nexport const changeDescription = payload => ({ payload, type: CHANGE_DESCRIPTION });\nexport const fetchSuccess = payload => ({ payload, type: FETCH_SUCCESS });\n\n/* thunk creators */\nexport const fetchCart = (data) => {\n  return (dispatch, getState) => {\n    if (getState().cart.length > 0) {\n      localStorage.setItem('cart', JSON.stringify(data));\n    } if (getState().cart.length === 0) {\n      const cartProductsLocalStorage = JSON.parse(localStorage.getItem('cart'));\n      if (cartProductsLocalStorage !== null) {\n        dispatch(fetchSuccess(cartProductsLocalStorage))\n      }\n    }\n  };\n};\n\n\n/* reducer */\nexport const reducer = (statePart = [], action = {}) => {\n  switch (action.type) {\n    case CHANGE_QUANTITY: {\n      return [...statePart.map(data => {\n        if (data.id === action.payload.id) {\n          data.quantity = action.payload.quantity;\n          return data;\n        } else {\n          return data;\n        }\n      })]\n    }\n    case CHANGE_DESCRIPTION: {\n      return [...statePart.map(data => {\n        if (data.id === action.payload.id) {\n          data.description = action.payload.description;\n          return data;\n        } else {\n          return data;\n        }\n      })]\n    }\n    case ADD_TO_CART: {\n      if (statePart.length > 0) {\n        let x = false;\n\n        statePart.map(data => {\n          if (data.color === action.payload.color && data.name === action.payload.name) {\n            x = true;\n            data.quantity += action.payload.quantity;\n            return data;\n          }\n        })\n        return x ? statePart : [...statePart, action.payload];\n      } else {\n        return [action.payload]\n      }\n    }\n    case REMOVE_FROM_CART: {\n      return [...statePart.filter(data => data.id !== action.payload)]\n    }\n    case FETCH_SUCCESS: {\n      return action.payload\n    }\n    case FETCH_START: {\n      return {\n        ...statePart,\n        loading: {\n          active: true,\n          error: false,\n        },\n      };\n    }\n    case FETCH_ERROR: {\n      return {\n        ...statePart,\n        loading: {\n          active: false,\n          error: action.payload,\n        },\n      };\n    }\n    default:\n      return statePart;\n  }\n};","C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\redux\\initialState.js",[],"C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\redux\\productsRedux.js",[],"C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\components\\views\\Homepage\\Homepage.js",["105"],"import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Slider from \"react-slick\";\nimport { Link } from 'react-router-dom';\nimport styles from './Homepage.module.scss';\n\nimport { connect } from 'react-redux';\nimport { getAll, fetchProducts } from '../../../redux/productsRedux';\n\nimport { RecommendationBox } from '../../features/RecommendationBox/RecommendationBox';\nimport { Container as WidthContainer } from '@material-ui/core';\n\nconst Component = ({ products, fetchProducts }) => {\n  useEffect(() => {\n    fetchProducts()\n  }, []);\n\n  const settings = {\n    dots: false,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    autoplay: true,\n  };\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sliderWrapper}>\n        <Slider {...settings}>\n          <div className={styles.imageWrapper}>\n            <img alt='' src='https://tantumverde.pl/wp-content/uploads/2019/05/honey-min-1.jpg'></img>\n          </div>\n          <div className={styles.imageWrapper}>\n            <img alt='' src='https://www.sloikmiodu.pl/wp-content/uploads/2019/08/jaki-miod-jest-najzdrowszy.png'></img>\n          </div>\n        </Slider>\n        <div className={styles.sliderCenterContent}>\n          <div className={styles.wrapper}>\n            <div className={styles.topContent}>\n              <h1>HONEY for HEALTH</h1>\n            </div>\n            <div className={styles.bottomContent}>\n              <div><p><span>Healthy and natural honey straight from our apiary</span></p></div>\n              <div></div>\n              <div><Link to='/shop'>START SHOPPING</Link></div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <WidthContainer>\n        <div className={styles.recommendationsWrapper}>\n          <h1>Our recommendations</h1>\n          <div className={styles.boxesWrapper}>\n            {products.map(data =>\n              <RecommendationBox key={data._id} data={data} />\n            )}\n          </div>\n        </div>\n      </WidthContainer>\n    </div>\n  );\n};\nComponent.propTypes = {\n  products: PropTypes.array,\n  fetchProducts: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n  products: getAll(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchProducts: () => dispatch(fetchProducts()),\n});\n\nconst Container = connect(mapStateToProps, mapDispatchToProps)(Component);\n\nexport {\n  Container as Homepage,\n  Component as HomepageComponent,\n};\n","C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\components\\layout\\MainLayout\\MainLayout.js",["106"],"import React, {useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport { Header } from '../Header/Header';\nimport { Footer } from '../Footer/Footer';\nimport { useDispatch } from 'react-redux';\nimport {fetchUser} from '../../../redux/userRedux';\nimport styles from './MainLayout.module.scss';\nimport { CartModal } from '../../features/CartModal/CartModal';\n\nconst Component = ({ children }) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchUser())\n  }, [])\n  return (\n    < div className={styles.root} >\n      <Header />\n      {children}\n      <CartModal />\n      <Footer />\n    </div >\n\n  );\n};\nComponent.propTypes = {\n  children: PropTypes.node,\n};\n\nexport {\n  Component as MainLayout,\n  Component as MainLayoutComponent,\n};\n","C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\components\\views\\NoPermission\\NoPermission.js",[],"C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\components\\views\\Shop\\Shop.js",["107"],"import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchProducts, getAll } from '../../../redux/productsRedux';\nimport styles from './Shop.module.scss';\nimport { ShopBox } from '../../features/ShopBox/ShopBox';\nimport { Container as ContainerWidth } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\nconst Component = ({ products, fetchProducts }) => {\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n\n  return (\n    <ContainerWidth>\n      <div className={styles.root}>\n        <div className={styles.link}><Link to='/'>HOME</Link> / <span>Shop</span></div>\n        <div className={styles.banner}>\n          <h1>HONEY for HEALTH</h1>\n        </div>\n        <h2 className={styles.subTitle}>- SHOP WITH US -</h2>\n        <div className={styles.products}>\n          {products.map(data => {\n            return data.customizable === false ? <ShopBox {...data} key={data._id} /> :\n              Object.keys(data.images).map((color, index) => {\n                data.image = data.images[color][0];\n                data.color = color;\n                return <ShopBox key={index} {...data} />\n              }\n              )\n          })}\n        </div>\n      </div>\n      </ContainerWidth>\n  );\n};\nComponent.propTypes = {\n  products: PropTypes.array,\n  fetchProducts: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n  products: getAll(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchProducts: () => dispatch(fetchProducts()),\n});\n\nconst Container = connect(mapStateToProps, mapDispatchToProps)(Component);\n\nexport {\n  Container as Shop,\n  Component as ShopComponent,\n};\n","C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\components\\views\\Cart\\Cart.js",[],"C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\components\\views\\Product\\Product.js",["108"],"import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { Link, useLocation } from 'react-router-dom';\nimport { fetchOneProduct, getOneProduct } from '../../../redux/productsRedux';\nimport { addToCart } from '../../../redux/cartRedux';\nimport { addModal } from '../../../redux/modalRedux';\nimport styles from './Product.module.scss';\nimport clsx from 'clsx';\nimport { Container as WidthContainer } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from '@material-ui/core';\nimport Collapse from '@material-ui/core/Collapse';\nimport { PUBLIC_URL } from '../../../config';\nimport Slider from \"react-slick\";\nimport { v4 as uuidv4 } from 'uuid';\n\nconst Component = ({ product, fetchOneProduct, addToCart, addModal }) => {\n  const [color, setColor] = React.useState('Black');\n  const location = useLocation();\n  useEffect(() => {\n    fetchOneProduct();\n    location.state !== undefined && setColor(location.state.color);\n  }, []);\n  \n  const { price, name, images, customizable, image } = product;\n  const [productDropdown, setProductDropdown] = React.useState(false);\n  const [policyDropdown, setPolicyDropdown] = React.useState(false);\n  const [quantity, setQuantity] = React.useState(1);\n\n  const handleProductDropdownClick = () => {\n    setProductDropdown(!productDropdown);\n  };\n\n  const handlePolicyDropdownClick = () => {\n    setPolicyDropdown(!policyDropdown);\n  };\n\n  const handleAddToCart = () => {\n    const output = {\n      price,\n      name,\n      quantity,\n      color,\n      image: customizable ? images[color][0] : image,\n      customizable,\n      id: uuidv4()\n    };\n\n    addModal();\n    addToCart(output);\n  }\n\n  const colors = [];\n\n  const settings = {\n    dots: false,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    autoplay: false,\n  };\n\n  for (let i in images) {\n    colors.push(i);\n  };\n  return (\n    <WidthContainer>\n      <div className={styles.root}>\n        <div className={styles.link}><Link to='/'>HOME</Link> / <span>{name}</span></div>\n        <div className={styles.leftWrapper}>\n          <div className={styles.imageWrapper}>\n            {customizable && images ? <Slider {...settings} className={styles.slider}>\n              {images && images[color].map(data =>\n                <div className={styles.imageWrapper} key={data}>\n                  <img src={`${PUBLIC_URL}${data}`} alt=''></img>\n                </div>\n              )}\n            </Slider> :\n              <img src={image} alt=''></img>}\n          </div>\n          <p>\n            I'm a product description. I’m a great place to include more information about your product. Buyers like to know what they’re getting before they purchase.\n          </p>\n        </div>\n        <div className={styles.rightWrapper}>\n          {customizable ? <h4>{`${color} ${name}`}</h4> : <h4>{name}</h4>}\n          <h3>${price}</h3>\n          <TextField\n            label=\"Quantity\"\n            type=\"number\"\n            value={quantity}\n            onChange={(e) => setQuantity(Number(e.target.value))}\n            inputProps={{\n              min: 1\n            }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            className={styles.quantity}\n          />\n          {customizable && <div className={styles.colors}>\n            {colors.map(data =>\n              <span className={clsx(styles.color, styles[data], { [styles.checked]: color === data })} key={data} onClick={() => setColor(data)}></span>\n            )}\n          </div>}\n          <Button className={styles.btn} onClick={() => handleAddToCart()}>Add to Cart</Button>\n          <Button className={styles.btn}>Buy Now</Button>\n          <div onClick={handleProductDropdownClick} className={styles.dropdownBtn}>\n            <h4>PRODUCT INFO</h4>\n            {productDropdown ? <h4>-</h4> : <h4>+</h4>}\n          </div>\n          <Collapse in={productDropdown} timeout=\"auto\" unmountOnExit>\n            <p>I'm a product detail. I'm a great place to add more information about your product such as sizing, material, care and cleaning instructions. This is also a great space to write what makes this product special and how your customers can benefit from this item. Buyers like to know what they’re getting before they purchase, so give them as much information as possible so they can buy with confidence and certainty.</p>\n          </Collapse>\n          <div onClick={handlePolicyDropdownClick} className={styles.dropdownBtn}>\n            <h4>RETURN AND REFUND POLICY</h4>\n            {policyDropdown ? <h4>-</h4> : <h4>+</h4>}\n          </div>\n          <Collapse in={policyDropdown} timeout=\"auto\" unmountOnExit>\n            <p>I’m a Return and Refund policy. I’m a great place to let your customers know what to do in case they are dissatisfied with their purchase. Having a straightforward refund or exchange policy is a great way to build trust and reassure your customers that they can buy with confidence.</p>\n          </Collapse>\n        </div>\n      </div>\n    </WidthContainer>\n  );\n};\nComponent.propTypes = {\n  fetchOneProduct: PropTypes.func,\n  product: PropTypes.object,\n  cartData: PropTypes.array,\n  addToCart: PropTypes.func,\n  addModal: PropTypes.func,\n  removeModal: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n  product: getOneProduct(state),\n});\n\nconst mapDispatchToProps = (dispatch, props) => ({\n  fetchOneProduct: () => dispatch(fetchOneProduct(props.match.params.id)),\n  addToCart: arg => dispatch(addToCart(arg)),\n  addModal: () => dispatch(addModal()),\n});\n\nconst Container = connect(mapStateToProps, mapDispatchToProps)(Component);\n\nexport {\n  Container as Product,\n  Component as ProductComponent,\n};\n","C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\config.js",[],"C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\components\\layout\\Header\\Header.js",["109"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addModal } from '../../../redux/modalRedux.js';\nimport { getUser } from '../../../redux/userRedux.js';\nimport { Link } from 'react-router-dom';\nimport { Container as ContainerWidth } from '@material-ui/core';\nimport { NavButton } from '../../common/NavButton/NavButton';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\n\nimport styles from './Header.module.scss';\n\nconst Component = ({ addModal, user }) => {\n  return (\n    <div className={styles.root}>\n      <ContainerWidth maxWidth='md' className={styles.container}>\n        <NavButton name={'Home'} link='/' />\n        <NavButton name={'About'} link='/about' />\n        <NavButton name={'Shop'} link='/shop' />\n        {user.logged === false ?\n          <a href='/auth/google' className={styles.btn}><AccountCircleIcon />Log In</a> :\n          <div>\n            <Link to='/cart' className={styles.btn}>{user.name}</Link>\n            <a href='/auth/logout' className={styles.btn}>Logout</a>\n          </div>}\n        <a onClick={addModal} className={styles.btn}><ShoppingCartIcon /></a>\n      </ContainerWidth>\n\n    </div>\n  );\n};\nComponent.propTypes = {\n  addModal: PropTypes.func,\n  user: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n  user: getUser(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addModal: () => dispatch(addModal()),\n});\n\nconst Container = connect(mapStateToProps, mapDispatchToProps)(Component);\n\nexport {\n  Container as Header,\n  Component as HeaderComponent,\n};\n","C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\components\\layout\\Footer\\Footer.js",[],"C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\components\\features\\CartModal\\CartModal.js",["110"],"import React, {useEffect} from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { removeModal, getModal } from '../../../redux/modalRedux.js';\nimport { getCartData, fetchCart } from '../../../redux/cartRedux.js';\nimport Drawer from '@material-ui/core/Drawer';\nimport { CartBox } from '../../features/CartBox/CartBox';\nimport styles from './CartModal.module.scss';\nimport { Link } from 'react-router-dom';\n\nconst Component = ({ removeModal, modalData, cartData, fetchCart }) => {\n  useEffect(()=>{\n    fetchCart(cartData)\n  }, [cartData])\n  let price = 0;\n  cartData.map(data => price += (data.price * data.quantity));\n  // if (cartData.length > 0) {\n  //   localStorage.setItem('cart', JSON.stringify(cartData));\n  // }\n  // const cartProductsLocalStorage = JSON.parse(localStorage.getItem('cart'));\n  // console.log(cartProductsLocalStorage)\n  return (\n    <Drawer anchor='right' open={modalData} onClose={() => removeModal()} className={styles.cart}>\n      <div className={styles.cartHeader}>\n        <span onClick={() => removeModal()}>{'>'}</span>\n        <h2>Cart</h2>\n      </div>\n      <div className={styles.cartMain}>\n        {cartData.map((data, index) =>\n          <CartBox key={index} data={data} />)}\n      </div>\n      <div className={styles.priceWrapper}>\n        <h3>Subtotal</h3>\n        <h3>${price}</h3>\n      </div>\n      <div className={styles.cartFooter}>\n        <Link to='/cart' onClick={removeModal}>View Cart</Link>\n      </div>\n    </Drawer>\n  );\n};\n\nComponent.propTypes = {\n  addModal: PropTypes.func,\n  removeModal: PropTypes.func,\n  fetchCart: PropTypes.func,\n  modalData: PropTypes.bool,\n  cartData: PropTypes.array,\n};\n\nconst mapStateToProps = state => ({\n  modalData: getModal(state),\n  cartData: getCartData(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  removeModal: () => dispatch(removeModal()),\n  fetchCart: (arg) => dispatch(fetchCart(arg))\n});\n\nconst Container = connect(mapStateToProps, mapDispatchToProps)(Component);\n\nexport {\n  Container as CartModal,\n  Component as CartModalComponent,\n};\n","C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\components\\features\\ShopBox\\ShopBox.js",["111"],"import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ShopBox.module.scss';\nimport { PUBLIC_URL } from '../../../config';\nimport { QuantityButton } from '../../common/QuantityButton/QuantityButton';\nimport { Link } from 'react-router-dom';\nimport { addToCart } from '../../../redux/cartRedux';\nimport { addModal } from '../../../redux/modalRedux';\nimport { connect } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst Component = ({ image, name, price, customizable, _id, addModal, addToCart, color }) => {\n  const [quantity, setQuantity] = useState(1);\n\n  const handleAddToCart = () => {\n    const output = {\n      price,\n      name,\n      quantity,\n      color,\n      image,\n      customizable,\n      id: uuidv4(),\n      _id\n    };\n    addModal();\n    addToCart(output);\n  }\n\n  return (\n    <div className={styles.root}>\n      <Link className={styles.imageWrapper} to={{pathname: `/product/${_id}`, state: {color}}} >\n        {customizable ? <img src={`${PUBLIC_URL}${image}`} alt=''></img> : <img src={image} alt=''></img>}\n        <div className={styles.slideInfo}>Quick view</div>\n      </Link>\n      {customizable ? <h4>{`${color} ${name}`}</h4> : <h4>{name}</h4>}\n      <h4>${price}</h4>\n      <QuantityButton quantity={quantity} setQuantity={setQuantity} />\n      <a className={styles.cartButton} onClick={() => handleAddToCart()}>Add to Cart</a>\n    </div>\n  );\n};\nComponent.propTypes = {\n  image: PropTypes.string,\n  name: PropTypes.string,\n  _id: PropTypes.string,\n  price: PropTypes.number,\n  customizable: PropTypes.bool,\n  addToCart: PropTypes.func,\n  addModal: PropTypes.func,\n};\n\nconst mapDispatchToProps = (dispatch, props) => ({\n  addToCart: arg => dispatch(addToCart(arg)),\n  addModal: () => dispatch(addModal()),\n});\n\nconst Container = connect(null, mapDispatchToProps)(Component);\n\n\nexport {\n  Container as ShopBox,\n  Component as ShopBoxComponent,\n};\n","C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\components\\features\\RecommendationBox\\RecommendationBox.js",[],"C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\components\\features\\CartBox\\CartBox.js",[],"C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\components\\common\\NavButton\\NavButton.js",[],"C:\\Users\\piotr\\Desktop\\Kodilla\\28. Projekt końcowy\\src\\components\\common\\QuantityButton\\QuantityButton.js",[],{"ruleId":"112","severity":1,"message":"113","line":1,"column":10,"nodeType":"114","messageId":"115","endLine":1,"endColumn":17},{"ruleId":"112","severity":1,"message":"116","line":2,"column":8,"nodeType":"114","messageId":"115","endLine":2,"endColumn":13},{"ruleId":"117","severity":1,"message":"118","line":71,"column":28,"nodeType":"119","messageId":"120","endLine":71,"endColumn":30},{"ruleId":"121","severity":1,"message":"122","line":16,"column":6,"nodeType":"123","endLine":16,"endColumn":8,"suggestions":"124"},{"ruleId":"121","severity":1,"message":"125","line":14,"column":6,"nodeType":"123","endLine":14,"endColumn":8,"suggestions":"126"},{"ruleId":"121","severity":1,"message":"122","line":13,"column":6,"nodeType":"123","endLine":13,"endColumn":8,"suggestions":"127"},{"ruleId":"121","severity":1,"message":"128","line":25,"column":6,"nodeType":"123","endLine":25,"endColumn":8,"suggestions":"129"},{"ruleId":"130","severity":1,"message":"131","line":27,"column":9,"nodeType":"132","endLine":27,"endColumn":54},{"ruleId":"121","severity":1,"message":"133","line":15,"column":6,"nodeType":"123","endLine":15,"endColumn":16,"suggestions":"134"},{"ruleId":"130","severity":1,"message":"131","line":39,"column":7,"nodeType":"132","endLine":39,"endColumn":74},"no-unused-vars","'API_URL' is defined but never used.","Identifier","unusedVar","'Axios' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchProducts'. Either include it or remove the dependency array. If 'fetchProducts' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["135"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["136"],["137"],"React Hook useEffect has missing dependencies: 'fetchOneProduct' and 'location.state'. Either include them or remove the dependency array. If 'fetchOneProduct' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["138"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'fetchCart'. Either include it or remove the dependency array. If 'fetchCart' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["139"],{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},{"desc":"140","fix":"144"},{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},"Update the dependencies array to be: [fetchProducts]",{"range":"149","text":"150"},"Update the dependencies array to be: [dispatch]",{"range":"151","text":"152"},{"range":"153","text":"150"},"Update the dependencies array to be: [fetchOneProduct, location.state]",{"range":"154","text":"155"},"Update the dependencies array to be: [cartData, fetchCart]",{"range":"156","text":"157"},[561,563],"[fetchProducts]",[492,494],"[dispatch]",[492,494],[1037,1039],"[fetchOneProduct, location.state]",[569,579],"[cartData, fetchCart]"]