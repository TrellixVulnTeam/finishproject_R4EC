{"ast":null,"code":"import{combineReducers,createStore,applyMiddleware}from'redux';import thunk from'redux-thunk';import{composeWithDevTools}from'redux-devtools-extension';import{initialState}from'./initialState';import{reducer as productsReducer}from'./productsRedux';import{reducer as cartReducer}from'./cartRedux';import{reducer as modalReducer}from'./modalRedux';import{reducer as userReducer}from'./userRedux';// define reducers\nvar reducers={products:productsReducer,cart:cartReducer,modal:modalReducer,user:userReducer};// add blank reducers for initial state properties without reducers\nObject.keys(initialState).forEach(function(item){if(typeof reducers[item]=='undefined'){reducers[item]=function(){var statePart=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;return statePart;};}});var combinedReducers=combineReducers(reducers);// create store\nexport var store=createStore(combinedReducers,initialState,composeWithDevTools(applyMiddleware(thunk)));","map":{"version":3,"sources":["C:/Users/piotr/Desktop/Kodilla/28. Projekt koÅ„cowy/src/redux/store.js"],"names":["combineReducers","createStore","applyMiddleware","thunk","composeWithDevTools","initialState","reducer","productsReducer","cartReducer","modalReducer","userReducer","reducers","products","cart","modal","user","Object","keys","forEach","item","statePart","combinedReducers","store"],"mappings":"AAAA,OAAQA,eAAR,CAAyBC,WAAzB,CAAsCC,eAAtC,KAA4D,OAA5D,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,OAASC,mBAAT,KAAoC,0BAApC,CAEA,OAASC,YAAT,KAA6B,gBAA7B,CACA,OAASC,OAAO,GAAIC,CAAAA,eAApB,KAA2C,iBAA3C,CACA,OAASD,OAAO,GAAIE,CAAAA,WAApB,KAAuC,aAAvC,CACA,OAASF,OAAO,GAAIG,CAAAA,YAApB,KAAwC,cAAxC,CACA,OAASH,OAAO,GAAII,CAAAA,WAApB,KAAuC,aAAvC,CAEA;AACA,GAAMC,CAAAA,QAAQ,CAAG,CACfC,QAAQ,CAAEL,eADK,CAEfM,IAAI,CAAEL,WAFS,CAGfM,KAAK,CAAEL,YAHQ,CAIfM,IAAI,CAAEL,WAJS,CAAjB,CAOA;AACAM,MAAM,CAACC,IAAP,CAAYZ,YAAZ,EAA0Ba,OAA1B,CAAkC,SAAAC,IAAI,CAAI,CACxC,GAAI,MAAOR,CAAAA,QAAQ,CAACQ,IAAD,CAAf,EAAyB,WAA7B,CAA0C,CACxCR,QAAQ,CAACQ,IAAD,CAAR,CAAiB,cAACC,CAAAA,SAAD,2DAAa,IAAb,OAAsBA,CAAAA,SAAtB,EAAjB,CACD,CACF,CAJD,EAKA,GAAMC,CAAAA,gBAAgB,CAAGrB,eAAe,CAACW,QAAD,CAAxC,CACA;AACA,MAAO,IAAMW,CAAAA,KAAK,CAAGrB,WAAW,CAC9BoB,gBAD8B,CAE9BhB,YAF8B,CAG9BD,mBAAmB,CACjBF,eAAe,CAACC,KAAD,CADE,CAHW,CAAzB","sourcesContent":["import {combineReducers, createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport { initialState } from './initialState';\nimport { reducer as productsReducer } from './productsRedux';\nimport { reducer as cartReducer } from './cartRedux';\nimport { reducer as modalReducer } from './modalRedux';\nimport { reducer as userReducer } from './userRedux';\n\n// define reducers\nconst reducers = {\n  products: productsReducer,\n  cart: cartReducer,\n  modal: modalReducer,\n  user: userReducer\n};\n\n// add blank reducers for initial state properties without reducers\nObject.keys(initialState).forEach(item => {\n  if (typeof reducers[item] == 'undefined') {\n    reducers[item] = (statePart = null) => statePart;\n  }\n});\nconst combinedReducers = combineReducers(reducers);\n// create store\nexport const store = createStore(\n  combinedReducers,\n  initialState,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n);"]},"metadata":{},"sourceType":"module"}