{"ast":null,"code":"import { API_URL } from '../config';\nimport Axios from 'axios';\n/* selectors */\n\nexport const getCartData = ({\n  cart\n}) => cart;\n/* action name creator */\n\nconst reducerName = 'cart';\n\nconst createActionName = name => `app/${reducerName}/${name}`;\n/* action types */\n\n\nconst FETCH_START = createActionName('FETCH_START');\nconst FETCH_ERROR = createActionName('FETCH_ERROR');\nconst ADD_TO_CART = createActionName('ADD_TO_CART');\nconst CHANGE_QUANTITY = createActionName('CHANGE_QUANTITY');\nconst REMOVE_FROM_CART = createActionName('REMOVE_FROM_CART');\nconst CHANGE_DESCRIPTION = createActionName('CHANGE_DESCRIPTION');\nconst FETCH_SUCCESS = createActionName('FETCH_SUCCESS');\n/* action creators */\n\nexport const fetchStarted = payload => ({\n  payload,\n  type: FETCH_START\n});\nexport const fetchError = payload => ({\n  payload,\n  type: FETCH_ERROR\n});\nexport const addToCart = payload => ({\n  payload,\n  type: ADD_TO_CART\n});\nexport const changeQuantity = payload => ({\n  payload,\n  type: CHANGE_QUANTITY\n});\nexport const removeFromCart = payload => ({\n  payload,\n  type: REMOVE_FROM_CART\n});\nexport const changeDescription = payload => ({\n  payload,\n  type: CHANGE_DESCRIPTION\n});\nexport const fetchSuccess = payload => ({\n  payload,\n  type: FETCH_SUCCESS\n});\n/* thunk creators */\n\nexport const fetchCart = data => {\n  return (dispatch, getState) => {\n    if (getState().cart.length > 0) {\n      localStorage.setItem('cart', JSON.stringify(data));\n    }\n\n    if (getState().cart.length === 0) {\n      const cartProductsLocalStorage = JSON.parse(localStorage.getItem('cart'));\n\n      if (cartProductsLocalStorage !== null) {\n        dispatch(fetchSuccess(cartProductsLocalStorage));\n      }\n    }\n  };\n};\n/* reducer */\n\nexport const reducer = (statePart = [], action = {}) => {\n  switch (action.type) {\n    case CHANGE_QUANTITY:\n      {\n        return [...statePart.map(data => {\n          if (data.id === action.payload.id) {\n            data.quantity = action.payload.quantity;\n            return data;\n          } else {\n            return data;\n          }\n        })];\n      }\n\n    case CHANGE_DESCRIPTION:\n      {\n        return [...statePart.map(data => {\n          if (data.id === action.payload.id) {\n            data.description = action.payload.description;\n            return data;\n          } else {\n            return data;\n          }\n        })];\n      }\n\n    case ADD_TO_CART:\n      {\n        if (statePart.length > 0) {\n          let x = false;\n          statePart.map(data => {\n            if (data.color === action.payload.color && data.name === action.payload.name) {\n              x = true;\n              data.quantity += action.payload.quantity;\n              return data;\n            }\n          });\n          return x ? statePart : [...statePart, action.payload];\n        } else {\n          return [action.payload];\n        }\n      }\n\n    case REMOVE_FROM_CART:\n      {\n        return [...statePart.filter(data => data.id !== action.payload)];\n      }\n\n    case FETCH_SUCCESS:\n      {\n        return action.payload;\n      }\n\n    case FETCH_START:\n      {\n        return { ...statePart,\n          loading: {\n            active: true,\n            error: false\n          }\n        };\n      }\n\n    case FETCH_ERROR:\n      {\n        return { ...statePart,\n          loading: {\n            active: false,\n            error: action.payload\n          }\n        };\n      }\n\n    default:\n      return statePart;\n  }\n};","map":{"version":3,"sources":["C:/Users/piotr/Desktop/Formula-1-shop-master/src/redux/cartRedux.js"],"names":["API_URL","Axios","getCartData","cart","reducerName","createActionName","name","FETCH_START","FETCH_ERROR","ADD_TO_CART","CHANGE_QUANTITY","REMOVE_FROM_CART","CHANGE_DESCRIPTION","FETCH_SUCCESS","fetchStarted","payload","type","fetchError","addToCart","changeQuantity","removeFromCart","changeDescription","fetchSuccess","fetchCart","data","dispatch","getState","length","localStorage","setItem","JSON","stringify","cartProductsLocalStorage","parse","getItem","reducer","statePart","action","map","id","quantity","description","x","color","filter","loading","active","error"],"mappings":"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","sourcesContent":["import { API_URL } from '../config';\nimport Axios from 'axios';\n\n/* selectors */\nexport const getCartData = ({ cart }) => cart;\n\n/* action name creator */\nconst reducerName = 'cart';\nconst createActionName = name => `app/${reducerName}/${name}`;\n\n/* action types */\nconst FETCH_START = createActionName('FETCH_START');\nconst FETCH_ERROR = createActionName('FETCH_ERROR');\nconst ADD_TO_CART = createActionName('ADD_TO_CART');\nconst CHANGE_QUANTITY = createActionName('CHANGE_QUANTITY');\nconst REMOVE_FROM_CART = createActionName('REMOVE_FROM_CART');\nconst CHANGE_DESCRIPTION = createActionName('CHANGE_DESCRIPTION');\nconst FETCH_SUCCESS = createActionName('FETCH_SUCCESS');\n\n/* action creators */\nexport const fetchStarted = payload => ({ payload, type: FETCH_START });\nexport const fetchError = payload => ({ payload, type: FETCH_ERROR });\nexport const addToCart = payload => ({ payload, type: ADD_TO_CART });\nexport const changeQuantity = payload => ({ payload, type: CHANGE_QUANTITY });\nexport const removeFromCart = payload => ({ payload, type: REMOVE_FROM_CART });\nexport const changeDescription = payload => ({ payload, type: CHANGE_DESCRIPTION });\nexport const fetchSuccess = payload => ({ payload, type: FETCH_SUCCESS });\n\n/* thunk creators */\nexport const fetchCart = (data) => {\n  return (dispatch, getState) => {\n    if (getState().cart.length > 0) {\n      localStorage.setItem('cart', JSON.stringify(data));\n    } if (getState().cart.length === 0) {\n      const cartProductsLocalStorage = JSON.parse(localStorage.getItem('cart'));\n      if (cartProductsLocalStorage !== null) {\n        dispatch(fetchSuccess(cartProductsLocalStorage))\n      }\n    }\n  };\n};\n\n\n/* reducer */\nexport const reducer = (statePart = [], action = {}) => {\n  switch (action.type) {\n    case CHANGE_QUANTITY: {\n      return [...statePart.map(data => {\n        if (data.id === action.payload.id) {\n          data.quantity = action.payload.quantity;\n          return data;\n        } else {\n          return data;\n        }\n      })]\n    }\n    case CHANGE_DESCRIPTION: {\n      return [...statePart.map(data => {\n        if (data.id === action.payload.id) {\n          data.description = action.payload.description;\n          return data;\n        } else {\n          return data;\n        }\n      })]\n    }\n    case ADD_TO_CART: {\n      if (statePart.length > 0) {\n        let x = false;\n\n        statePart.map(data => {\n          if (data.color === action.payload.color && data.name === action.payload.name) {\n            x = true;\n            data.quantity += action.payload.quantity;\n            return data;\n          }\n        })\n        return x ? statePart : [...statePart, action.payload];\n      } else {\n        return [action.payload]\n      }\n    }\n    case REMOVE_FROM_CART: {\n      return [...statePart.filter(data => data.id !== action.payload)]\n    }\n    case FETCH_SUCCESS: {\n      return action.payload\n    }\n    case FETCH_START: {\n      return {\n        ...statePart,\n        loading: {\n          active: true,\n          error: false,\n        },\n      };\n    }\n    case FETCH_ERROR: {\n      return {\n        ...statePart,\n        loading: {\n          active: false,\n          error: action.payload,\n        },\n      };\n    }\n    default:\n      return statePart;\n  }\n};"]},"metadata":{},"sourceType":"module"}