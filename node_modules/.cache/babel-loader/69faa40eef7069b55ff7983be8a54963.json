{"ast":null,"code":"import { API_URL } from '../config';\nimport Axios from 'axios';\n/* selectors */\n\nexport const getAll = ({\n  products\n}) => products.data;\nexport const getOneProduct = ({\n  products\n}) => products.oneProduct;\nexport const getLoading = ({\n  products\n}) => products.loading;\n/* action name creator */\n\nconst reducerName = 'products';\n\nconst createActionName = name => `app/${reducerName}/${name}`;\n/* action types */\n\n\nconst FETCH_START = createActionName('FETCH_START');\nconst FETCH_ERROR = createActionName('FETCH_ERROR');\nconst FETCH_SUCCEED = createActionName('FETCH_SUCCEED');\nconst FETCH_ONE_PRODUCT_SUCCEED = createActionName('FETCH_ONE_PRODUCT_SUCCEED');\n/* action creators */\n\nexport const fetchStarted = payload => ({\n  payload,\n  type: FETCH_START\n});\nexport const fetchError = payload => ({\n  payload,\n  type: FETCH_ERROR\n});\nexport const fetchSucceed = payload => ({\n  payload,\n  type: FETCH_SUCCEED\n});\nexport const fetchOneProductSucceed = payload => ({\n  payload,\n  type: FETCH_ONE_PRODUCT_SUCCEED\n});\n/* thunk creators */\n\nexport const fetchProducts = () => {\n  return (dispatch, getState) => {\n    if (getState().products.data.length === 0) {\n      dispatch(fetchStarted());\n      Axios.get(`${API_URL}/products`).then(res => {\n        dispatch(fetchSucceed(res.data));\n      }).catch(err => {\n        dispatch(fetchError(err.message || true));\n      });\n    }\n  };\n};\nexport const fetchOneProduct = id => {\n  return (dispatch, getState) => {\n    dispatch(fetchStarted());\n    Axios.get(`${API_URL}/products/${id}`).then(res => {\n      dispatch(fetchOneProductSucceed(res.data));\n    }).catch(err => {\n      dispatch(fetchError(err.message || true));\n    });\n  };\n};\n/* reducer */\n\nexport const reducer = (statePart = [], action = {}) => {\n  switch (action.type) {\n    case FETCH_SUCCEED:\n      {\n        return {\n          data: [...action.payload],\n          oneProduct: {},\n          loading: {\n            active: false,\n            error: false\n          }\n        };\n      }\n\n    case FETCH_ONE_PRODUCT_SUCCEED:\n      {\n        return {\n          data: [...statePart.data],\n          oneProduct: action.payload,\n          loading: {\n            active: false,\n            error: false\n          }\n        };\n      }\n\n    case FETCH_START:\n      {\n        return { ...statePart,\n          loading: {\n            active: true,\n            error: false\n          }\n        };\n      }\n\n    case FETCH_ERROR:\n      {\n        return { ...statePart,\n          loading: {\n            active: false,\n            error: action.payload\n          }\n        };\n      }\n\n    default:\n      return statePart;\n  }\n};","map":{"version":3,"sources":["C:/Users/piotr/Desktop/Kodilla/28. Projekt koÅ„cowy/src/redux/productsRedux.js"],"names":["API_URL","Axios","getAll","products","data","getOneProduct","oneProduct","getLoading","loading","reducerName","createActionName","name","FETCH_START","FETCH_ERROR","FETCH_SUCCEED","FETCH_ONE_PRODUCT_SUCCEED","fetchStarted","payload","type","fetchError","fetchSucceed","fetchOneProductSucceed","fetchProducts","dispatch","getState","length","get","then","res","catch","err","message","fetchOneProduct","id","reducer","statePart","action","active","error"],"mappings":"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","sourcesContent":["import { API_URL } from '../config';\nimport Axios from 'axios';\n\n/* selectors */\nexport const getAll = ({ products }) => products.data;\nexport const getOneProduct = ({ products }) => products.oneProduct;\nexport const getLoading = ({ products }) => products.loading;\n\n/* action name creator */\nconst reducerName = 'products';\nconst createActionName = name => `app/${reducerName}/${name}`;\n\n/* action types */\nconst FETCH_START = createActionName('FETCH_START');\nconst FETCH_ERROR = createActionName('FETCH_ERROR');\nconst FETCH_SUCCEED = createActionName('FETCH_SUCCEED');\nconst FETCH_ONE_PRODUCT_SUCCEED = createActionName('FETCH_ONE_PRODUCT_SUCCEED');\n\n/* action creators */\nexport const fetchStarted = payload => ({ payload, type: FETCH_START });\nexport const fetchError = payload => ({ payload, type: FETCH_ERROR });\nexport const fetchSucceed = payload => ({ payload, type: FETCH_SUCCEED });\nexport const fetchOneProductSucceed = payload => ({ payload, type: FETCH_ONE_PRODUCT_SUCCEED });\n\n/* thunk creators */\nexport const fetchProducts = () => {\n  return (dispatch, getState) => {\n    if (getState().products.data.length === 0) {\n      dispatch(fetchStarted());\n\n      Axios\n        .get(`${API_URL}/products`)\n        .then(res => {\n          dispatch(fetchSucceed(res.data));\n        })\n        .catch(err => {\n          dispatch(fetchError(err.message || true));\n        });\n    }\n  };\n};\n\nexport const fetchOneProduct = (id) => {\n  return (dispatch, getState) => {\n    dispatch(fetchStarted());\n    Axios\n      .get(`${API_URL}/products/${id}`)\n      .then(res => {\n        dispatch(fetchOneProductSucceed(res.data));\n      })\n      .catch(err => {\n        dispatch(fetchError(err.message || true));\n      });\n\n  };\n};\n\n/* reducer */\nexport const reducer = (statePart = [], action = {}) => {\n  switch (action.type) {\n    case FETCH_SUCCEED: {\n      return {\n        data: [...action.payload],\n        oneProduct: {},\n        loading: {\n          active: false,\n          error: false,\n        },\n      };\n    }\n    case FETCH_ONE_PRODUCT_SUCCEED: {\n      return {\n        data: [...statePart.data],\n        oneProduct: action.payload,\n        loading: {\n          active: false,\n          error: false,\n        },\n      };\n    }\n    case FETCH_START: {\n      return {\n        ...statePart,\n        loading: {\n          active: true,\n          error: false,\n        },\n      };\n    }\n    case FETCH_ERROR: {\n      return {\n        ...statePart,\n        loading: {\n          active: false,\n          error: action.payload,\n        },\n      };\n    }\n    default:\n      return statePart;\n  }\n};"]},"metadata":{},"sourceType":"module"}