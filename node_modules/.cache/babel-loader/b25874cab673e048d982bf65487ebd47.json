{"ast":null,"code":"import { USER_URL } from '../config';\nimport Axios from 'axios';\nexport const getUser = ({\n  user\n}) => user.data;\nconst reducerName = 'user';\n\nconst createActionName = name => `app/${reducerName}/${name}`;\n\nconst FETCH_SUCCESS = createActionName('FETCH_SUCCESS');\nconst FETCH_START = createActionName('FETCH_START');\nconst FETCH_ERROR = createActionName('FETCH_ERROR');\n\nconst fetchSuccess = payload => ({\n  payload,\n  type: FETCH_SUCCESS\n});\n\nexport const fetchStarted = payload => ({\n  payload,\n  type: FETCH_START\n});\nexport const fetchError = payload => ({\n  payload,\n  type: FETCH_ERROR\n});\nexport const fetchUser = () => {\n  return (dispatch, getState) => {\n    dispatch(fetchStarted());\n    Axios.get(`${USER_URL}/logged`).then(res => {\n      dispatch(fetchSuccess(res.data));\n    }).catch(err => {\n      dispatch(fetchError(err.message || true));\n    });\n  };\n};\nexport const reducer = (statePart = {}, action = {}) => {\n  switch (action.type) {\n    case FETCH_SUCCESS:\n      {\n        return {\n          data: action.payload,\n          loading: {\n            active: false,\n            error: false\n          }\n        };\n      }\n\n    case FETCH_START:\n      {\n        return { ...statePart,\n          loading: {\n            active: true,\n            error: false\n          }\n        };\n      }\n\n    case FETCH_ERROR:\n      {\n        return { ...statePart,\n          loading: {\n            active: false,\n            error: action.payload\n          }\n        };\n      }\n\n    default:\n      return statePart;\n  }\n};","map":{"version":3,"sources":["C:/Users/piotr/Desktop/Formula-1-shop-master/src/redux/userRedux.js"],"names":["USER_URL","Axios","getUser","user","data","reducerName","createActionName","name","FETCH_SUCCESS","FETCH_START","FETCH_ERROR","fetchSuccess","payload","type","fetchStarted","fetchError","fetchUser","dispatch","getState","get","then","res","catch","err","message","reducer","statePart","action","loading","active","error"],"mappings":"AAAA,SAASA,QAAT,QAAyB,WAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAYA,IAAI,CAACC,IAAjC;AAEP,MAAMC,WAAW,GAAG,MAApB;;AACA,MAAMC,gBAAgB,GAAGC,IAAI,IAAK,OAAMF,WAAY,IAAGE,IAAK,EAA5D;;AAEA,MAAMC,aAAa,GAAGF,gBAAgB,CAAC,eAAD,CAAtC;AACA,MAAMG,WAAW,GAAGH,gBAAgB,CAAC,aAAD,CAApC;AACA,MAAMI,WAAW,GAAGJ,gBAAgB,CAAC,aAAD,CAApC;;AAEA,MAAMK,YAAY,GAAGC,OAAO,KAAK;AAAEA,EAAAA,OAAF;AAAWC,EAAAA,IAAI,EAAEL;AAAjB,CAAL,CAA5B;;AACA,OAAO,MAAMM,YAAY,GAAGF,OAAO,KAAK;AAAEA,EAAAA,OAAF;AAAWC,EAAAA,IAAI,EAAEJ;AAAjB,CAAL,CAA5B;AACP,OAAO,MAAMM,UAAU,GAAGH,OAAO,KAAK;AAAEA,EAAAA,OAAF;AAAWC,EAAAA,IAAI,EAAEH;AAAjB,CAAL,CAA1B;AAEP,OAAO,MAAMM,SAAS,GAAG,MAAM;AAC7B,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC7BD,IAAAA,QAAQ,CAACH,YAAY,EAAb,CAAR;AAEAb,IAAAA,KAAK,CAACkB,GAAN,CAAW,GAAEnB,QAAS,SAAtB,EACGoB,IADH,CACQC,GAAG,IAAI;AACXJ,MAAAA,QAAQ,CAACN,YAAY,CAACU,GAAG,CAACjB,IAAL,CAAb,CAAR;AACD,KAHH,EAIGkB,KAJH,CAISC,GAAG,IAAI;AACZN,MAAAA,QAAQ,CAACF,UAAU,CAACQ,GAAG,CAACC,OAAJ,IAAe,IAAhB,CAAX,CAAR;AACD,KANH;AAOD,GAVD;AAWD,CAZM;AAcP,OAAO,MAAMC,OAAO,GAAG,CAACC,SAAS,GAAG,EAAb,EAAiBC,MAAM,GAAG,EAA1B,KAAiC;AACtD,UAAQA,MAAM,CAACd,IAAf;AACE,SAAKL,aAAL;AAAoB;AAClB,eAAO;AACLJ,UAAAA,IAAI,EAAEuB,MAAM,CAACf,OADR;AAELgB,UAAAA,OAAO,EAAE;AACPC,YAAAA,MAAM,EAAE,KADD;AAEPC,YAAAA,KAAK,EAAE;AAFA;AAFJ,SAAP;AAOD;;AACD,SAAKrB,WAAL;AAAkB;AAChB,eAAO,EACL,GAAGiB,SADE;AAELE,UAAAA,OAAO,EAAE;AACPC,YAAAA,MAAM,EAAE,IADD;AAEPC,YAAAA,KAAK,EAAE;AAFA;AAFJ,SAAP;AAOD;;AACD,SAAKpB,WAAL;AAAkB;AAChB,eAAO,EACL,GAAGgB,SADE;AAELE,UAAAA,OAAO,EAAE;AACPC,YAAAA,MAAM,EAAE,KADD;AAEPC,YAAAA,KAAK,EAAEH,MAAM,CAACf;AAFP;AAFJ,SAAP;AAOD;;AACD;AAAS,aAAOc,SAAP;AA5BX;AA8BD,CA/BM","sourcesContent":["import { USER_URL } from '../config';\nimport Axios from 'axios';\n\nexport const getUser = ({user}) => user.data;\n\nconst reducerName = 'user';\nconst createActionName = name => `app/${reducerName}/${name}`;\n\nconst FETCH_SUCCESS = createActionName('FETCH_SUCCESS');\nconst FETCH_START = createActionName('FETCH_START');\nconst FETCH_ERROR = createActionName('FETCH_ERROR');\n\nconst fetchSuccess = payload => ({ payload, type: FETCH_SUCCESS });\nexport const fetchStarted = payload => ({ payload, type: FETCH_START });\nexport const fetchError = payload => ({ payload, type: FETCH_ERROR });\n\nexport const fetchUser = () => {\n  return (dispatch, getState) => {\n    dispatch(fetchStarted());\n\n    Axios.get(`${USER_URL}/logged`)\n      .then(res => {\n        dispatch(fetchSuccess(res.data))\n      })\n      .catch(err => {\n        dispatch(fetchError(err.message || true))\n      })\n  }\n}\n\nexport const reducer = (statePart = {}, action = {}) => {\n  switch (action.type) {\n    case FETCH_SUCCESS: {\n      return {\n        data: action.payload,\n        loading: {\n          active: false,\n          error: false,\n        },\n      }\n    }\n    case FETCH_START: {\n      return {\n        ...statePart,\n        loading: {\n          active: true,\n          error: false,\n        },\n      };\n    }\n    case FETCH_ERROR: {\n      return {\n        ...statePart,\n        loading: {\n          active: false,\n          error: action.payload,\n        },\n      };\n    }\n    default: return statePart\n  }\n}"]},"metadata":{},"sourceType":"module"}