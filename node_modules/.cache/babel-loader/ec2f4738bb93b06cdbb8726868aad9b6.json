{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\piotr\\\\Desktop\\\\Kodilla\\\\28. Projekt ko\\u0144cowy\\\\src\\\\components\\\\common\\\\QuantityButton\\\\QuantityButton.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { connect } from 'react-redux';\nimport { changeQuantity } from '../../../redux/cartRedux.js';\nimport styles from './QuantityButton.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Component = ({\n  quantity,\n  setQuantity,\n  cart,\n  id,\n  changeQuantity\n}) => {\n  const handleChangeQuantity = arg => {\n    if (arg === 'plus') {\n      setQuantity(quantity += 1);\n      changeQuantity({\n        id,\n        quantity\n      });\n    }\n\n    if (arg === 'minus') {\n      quantity > 1 && setQuantity(quantity -= 1);\n      changeQuantity({\n        id,\n        quantity\n      });\n    }\n  };\n\n  return cart ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx(styles.root, styles.cart),\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: clsx(styles.btn, quantity === 1 && styles.btnDisable),\n      onClick: () => handleChangeQuantity('minus'),\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: quantity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: styles.btn,\n      onClick: () => handleChangeQuantity('plus'),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.root,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: clsx(styles.btn, quantity === 1 && styles.btnDisable),\n      onClick: () => quantity > 1 && setQuantity(quantity -= 1),\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: quantity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: styles.btn,\n      onClick: () => setQuantity(quantity += 1),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Component;\nComponent.propTypes = {\n  quantity: PropTypes.number,\n  setQuantity: PropTypes.func,\n  changeQuantity: PropTypes.func,\n  cart: PropTypes.bool,\n  id: PropTypes.string\n}; // const mapStateToProps = state => ({\n//   someProp: reduxSelector(state),\n// });\n\nconst mapDispatchToProps = dispatch => ({\n  changeQuantity: arg => dispatch(changeQuantity(arg))\n});\n\nconst Container = connect(null, mapDispatchToProps)(Component);\nexport { Container as QuantityButton, Component as QuantityButtonComponent };\n\nvar _c;\n\n$RefreshReg$(_c, \"Component\");","map":{"version":3,"sources":["C:/Users/piotr/Desktop/Kodilla/28. Projekt koÅ„cowy/src/components/common/QuantityButton/QuantityButton.js"],"names":["React","PropTypes","clsx","connect","changeQuantity","styles","Component","quantity","setQuantity","cart","id","handleChangeQuantity","arg","root","btn","btnDisable","propTypes","number","func","bool","string","mapDispatchToProps","dispatch","Container","QuantityButton","QuantityButtonComponent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport clsx from 'clsx';\n\nimport { connect } from 'react-redux';\nimport { changeQuantity } from '../../../redux/cartRedux.js';\n\nimport styles from './QuantityButton.module.scss';\n\nconst Component = ({ quantity, setQuantity, cart, id, changeQuantity }) => {\n  const handleChangeQuantity = (arg) => {\n    if(arg === 'plus'){\n      setQuantity(quantity += 1);\n      changeQuantity({id, quantity});\n    }\n    if(arg === 'minus'){\n      quantity > 1 && setQuantity(quantity -= 1);\n      changeQuantity({id, quantity});\n    }\n  }\n  return cart ? (\n    <div className={clsx(styles.root, styles.cart)}>\n      <span className={clsx(styles.btn, quantity === 1 && styles.btnDisable)} onClick={() => handleChangeQuantity('minus')}>-</span>\n      <span>{quantity}</span>\n      <span className={styles.btn} onClick={() => handleChangeQuantity('plus')}>+</span>\n    </div>\n  ) :\n  (\n    <div className={styles.root}>\n      <span className={clsx(styles.btn, quantity === 1 && styles.btnDisable)} onClick={() => quantity > 1 && setQuantity(quantity -= 1)}>-</span>\n      <span>{quantity}</span>\n      <span className={styles.btn} onClick={() => setQuantity(quantity += 1)}>+</span>\n    </div>\n  )\n};\nComponent.propTypes = {\n  quantity: PropTypes.number,\n  setQuantity: PropTypes.func,\n  changeQuantity: PropTypes.func,\n  cart: PropTypes.bool,\n  id: PropTypes.string,\n};\n\n// const mapStateToProps = state => ({\n//   someProp: reduxSelector(state),\n// });\n\nconst mapDispatchToProps = dispatch => ({\n  changeQuantity: arg => dispatch(changeQuantity(arg)),\n});\n\nconst Container = connect(null, mapDispatchToProps)(Component);\n\nexport {\n  Container as QuantityButton,\n  Component as QuantityButtonComponent,\n};\n"]},"metadata":{},"sourceType":"module"}